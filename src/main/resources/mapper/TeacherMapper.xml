<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.byk.experimentsystem.mapper.TeacherMapper" >
  <resultMap id="BaseResultMap" type="com.byk.experimentsystem.entity.Teacher" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="tea_id" property="teaId" jdbcType="INTEGER" />
    <result column="tea_name" property="teaName" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="birth" property="birth" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="avatar_url" property="avatarUrl" jdbcType="VARCHAR" />
    <result column="is_teacher_confirm" property="isTeacherConfirm" jdbcType="INTEGER" />
    <result column="createdAt" property="createdat" jdbcType="TIMESTAMP" />
    <result column="updatedAt" property="updatedat" jdbcType="TIMESTAMP" />
    <result column="college_id" property="collegeId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, tea_id, tea_name, user_name, password, sex, age, birth, email, address, phone, 
    avatar_url, is_teacher_confirm, createdAt, updatedAt, college_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.byk.experimentsystem.entity.TeacherExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.byk.experimentsystem.entity.TeacherExample" >
    delete from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.byk.experimentsystem.entity.Teacher" >
    insert into teacher (id, tea_id, tea_name, 
      user_name, password, sex, 
      age, birth, email, 
      address, phone, avatar_url, 
      is_teacher_confirm, createdAt, updatedAt, 
      college_id)
    values (#{id,jdbcType=INTEGER}, #{teaId,jdbcType=INTEGER}, #{teaName,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{age,jdbcType=INTEGER}, #{birth,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=VARCHAR}, 
      #{isTeacherConfirm,jdbcType=INTEGER}, #{createdat,jdbcType=TIMESTAMP}, #{updatedat,jdbcType=TIMESTAMP}, 
      #{collegeId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.byk.experimentsystem.entity.Teacher" >
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="teaId != null" >
        tea_id,
      </if>
      <if test="teaName != null" >
        tea_name,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="birth != null" >
        birth,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="avatarUrl != null" >
        avatar_url,
      </if>
      <if test="isTeacherConfirm != null" >
        is_teacher_confirm,
      </if>
      <if test="createdat != null" >
        createdAt,
      </if>
      <if test="updatedat != null" >
        updatedAt,
      </if>
      <if test="collegeId != null" >
        college_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="teaId != null" >
        #{teaId,jdbcType=INTEGER},
      </if>
      <if test="teaName != null" >
        #{teaName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="birth != null" >
        #{birth,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="isTeacherConfirm != null" >
        #{isTeacherConfirm,jdbcType=INTEGER},
      </if>
      <if test="createdat != null" >
        #{createdat,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedat != null" >
        #{updatedat,jdbcType=TIMESTAMP},
      </if>
      <if test="collegeId != null" >
        #{collegeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.byk.experimentsystem.entity.TeacherExample" resultType="java.lang.Integer" >
    select count(*) from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExample" parameterType="map" >
    update teacher
    set id = #{record.id,jdbcType=INTEGER},
      tea_id = #{record.teaId,jdbcType=INTEGER},
      tea_name = #{record.teaName,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      age = #{record.age,jdbcType=INTEGER},
      birth = #{record.birth,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      is_teacher_confirm = #{record.isTeacherConfirm,jdbcType=INTEGER},
      createdAt = #{record.createdat,jdbcType=TIMESTAMP},
      updatedAt = #{record.updatedat,jdbcType=TIMESTAMP},
      college_id = #{record.collegeId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateOne"  parameterType="com.byk.experimentsystem.entity.Teacher">
    UPDATE teacher
    <trim prefix="set" suffixOverrides=",">
      <if test="teaName!=null">tea_name=#{teaName},</if>
      <if test="userName!=null">user_name=#{userName},</if>
      <if test="password!=null">password=#{password},</if>
      <if test="sex!=null">sex=#{sex},</if>
      <if test="age!=null">age=#{age},</if>
      <if test="birth!=null">birth=#{birth},</if>
      <if test="email!=null">email=#{email},</if>
      <if test="address!=null">address=#{address},</if>
      <if test="phone!=null">phone=#{phone},</if>
      <if test="avatarUrl!=null">avatar_url=#{avatarUrl},</if>
      <if test="collegeId!=null">college_id=#{collegeId},</if>
    </trim>
    WHERE id=#{id}
  </update>
</mapper>