<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.byk.experimentsystem.mapper.File_userMapper">
  <resultMap id="BaseResultMap" type="com.byk.experimentsystem.entity.File_user">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="teacher_id" jdbcType="INTEGER" property="teacherId" />
    <result column="file_id" jdbcType="INTEGER" property="fileId" />
    <result column="createdAt" jdbcType="TIMESTAMP" property="createdat" />
    <result column="updatedAt" jdbcType="TIMESTAMP" property="updatedat" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, teacher_id, file_id, createdAt, updatedAt
  </sql>
  <select id="selectByExample" parameterType="com.byk.experimentsystem.entity.File_userExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from file_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.byk.experimentsystem.entity.File_userExample">
    delete from file_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.byk.experimentsystem.entity.File_user">
    insert into file_user (id, user_id, teacher_id, 
      file_id, createdAt, updatedAt
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{teacherId,jdbcType=INTEGER}, 
      #{fileId,jdbcType=INTEGER}, #{createdat,jdbcType=TIMESTAMP}, #{updatedat,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.byk.experimentsystem.entity.File_user">
    insert into file_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="fileId != null">
        file_id,
      </if>
      <if test="createdat != null">
        createdAt,
      </if>
      <if test="updatedat != null">
        updatedAt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="fileId != null">
        #{fileId,jdbcType=INTEGER},
      </if>
      <if test="createdat != null">
        #{createdat,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedat != null">
        #{updatedat,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.byk.experimentsystem.entity.File_userExample" resultType="java.lang.Integer">
    select count(*) from file_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update file_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.fileId != null">
        file_id = #{record.fileId,jdbcType=INTEGER},
      </if>
      <if test="record.createdat != null">
        createdAt = #{record.createdat,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedat != null">
        updatedAt = #{record.updatedat,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update file_user
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      file_id = #{record.fileId,jdbcType=INTEGER},
      createdAt = #{record.createdat,jdbcType=TIMESTAMP},
      updatedAt = #{record.updatedat,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>


  <insert id="insertRelations" keyProperty="id" parameterType="java.util.List" useGeneratedKeys="true">


    insert into file_user (teacher_id,file_id)
    values
    <!--item就是List里每一项的对象名，要用","分割每一条数据，最后要";"结尾-->
    <foreach close=";" collection="list" index="index" item="item" separator=",">
      (#{item.teacherId}, #{item.fileId})
    </foreach>
  </insert>
</mapper>